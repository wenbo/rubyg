require 'matrix'
# 2x2の行列。
m1 = Matrix[[1, 2], [3, 4]]
m2 = Matrix[[5.0, 6.6], [7.2, 8.9]]
# 4次元対角行列。
Matrix.diagonal(1,2,3,4)   # => Matrix[[1, 0, 0, 0], [0, 2, 0, 0], [0, 0, 3, 0], [0, 0, 0, 4]]
# 行列の加算。
m1+m2                      # => Matrix[[6.0, 8.6], [10.2, 12.9]]
# 行列の乗算。
m1*m2                      # => Matrix[[19.4, 24.4], [43.8, 55.4]]
# 行列のスカラー倍。
m1*3                       # => Matrix[[3, 6], [9, 12]]
3*m1                       # => Matrix[[3, 6], [9, 12]]
# 行列の累乗。（整数のみ）
m1**5                      # => Matrix[[1069, 1558], [2337, 3406]]
# 各要素を小数に変換する
m1f = m1.map{|x| x.to_f }  # => Matrix[[1.0, 2.0], [3.0, 4.0]]
# 逆行列。Ruby 1.8だとIntegerの割り算をしてしまうせいで正しい答えはでない。
# 行列要素をFloatにすることで回避できる。
m1.inv                     # => Matrix[[-2, 1], [1, -1]]
m1f.inv                    # => Matrix[[-2.0, 1.0], [1.5, -0.5]]
# 行列式
m2.det                     # => -3.02
# 階数
m2.rank                    # => 2
# 転置行列
m2.t                       # => Matrix[[5.0, 7.2], [6.6, 8.9]]
# トレース
m2.tr                      # => 13.9

# 2次元縦ベクトル。
v1 = Vector[3, 4]
# 行列と縦ベクトルの乗算。
m1*v1                      # => Vector[11, 25]
# ベクトルのスカラー倍。これもRuby 1.8だとバグがありエラーになってしまいます。
v1*4                       # => Vector[12, 16]
4*v1 rescue $!             # => #<TypeError: Vector can't be coerced into Fixnum>
# ベクトルの加算。
v1+v1                      # => Vector[6, 8]
# 横ベクトル化。
v1.covector                # => Matrix[[3, 4]]
# 絶対値
v1.r                       # => 5.0
# 内積
v1.inner_product v1        # => 25
